@model FrontEnd.Controllers.UserVM

@{
    ViewData["Title"] = "Signup";
}


<!-- Adding Bootstrap 4/5 CDN for responsive and styled UI -->
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
    <style>
        body {
            background-color: #f4f6f9;
            font-family: Arial, sans-serif;
        }
        .container {
            max-width: 500px;
            margin-top: 50px;
        }
        .card {
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-control {
            border-radius: 20px;
            padding: 15px;
        }
        .btn {
            width: 100%;
            padding: 12px;
            border-radius: 20px;
            font-size: 16px;
        }
        .alert {
            margin-top: 20px;
        }
        .footer-link {
            text-align: center;
            margin-top: 15px;
        }
        .footer-link a {
            color: #007bff;
            text-decoration: none;
        }
        .footer-link a:hover {
            text-decoration: underline;
        }
    </style>
</head>

<body>

<div class="container">
    <div class="card">
        <h1>Sign Up</h1>
        
        <form id="signupForm">
            <!-- Name Field -->
            <div class="form-group">
                <label for="Name">Full Name</label>
                <input type="text" id="Name" class="form-control" required placeholder="Enter your full name" />
            </div>

            <!-- Email Field -->
            <div class="form-group">
                <label for="Email">Email</label>
                <input type="email" id="Email" class="form-control" required placeholder="Enter your email" />
            </div>

            <!-- Date of Birth Field -->
            <div class="form-group">
                <label for="DateOfBirth">Date of Birth</label>
                <input type="date" id="DateOfBirth" class="form-control" required />
            </div>

            <!-- Password Field -->
            <div class="form-group">
                <label for="PasswordHash">Password</label>
                <input type="password" id="PasswordHash" class="form-control" required placeholder="Enter your password" />
            </div>

            <!-- Submit Button -->
            <div class="form-group">
                <input type="submit" value="Create Account" class="btn btn-primary" />
            </div>
        </form>

        <!-- Success/Error Message -->
        <div id="responseMessage" class="alert alert-info" style="display:none;"></div>

        <!-- Link to Login Page -->
        <div class="footer-link">
            <a href="/Authentication/Login">Already have an account? Log in here</a>
        </div>
    </div>
</div>

<!-- JavaScript code to handle the form submission via AJAX -->
<script>
    document.getElementById("signupForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent page reload

        const formData = {
            Name: document.getElementById("Name").value,
            Email: document.getElementById("Email").value,
            DateOfBirth: document.getElementById("DateOfBirth").value,
            PasswordHash: document.getElementById("PasswordHash").value
        };

        // Send the data to the API using Fetch
        fetch("https://localhost:7237/api/Authentication/signup", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(formData)
        })
            .then(response => {
                // Check if the response status is okay (200-299)
                if (!response.ok && response.status != 400) { 
                    throw new Error("Registration failed: " + response.statusText);
                }

                // Parse the JSON response
                return response.json();
            })
            .then(data => {
                // Handle success
                if (data.success) {
                    document.getElementById("responseMessage").style.display = "block";
                    document.getElementById("responseMessage").classList.remove("alert-info");
                    document.getElementById("responseMessage").classList.add("alert-success");
                    document.getElementById("responseMessage").innerText = data.message;

                    // Optionally, redirect after success
                    setTimeout(() => {
                        window.location.href = "/Authentication/Login"; // Redirect to login page
                    }, 2000);
                } else {
                    // Handle error message from API response
                    document.getElementById("responseMessage").style.display = "block";
                    document.getElementById("responseMessage").classList.remove("alert-info");
                    document.getElementById("responseMessage").classList.add("alert-danger");
                    document.getElementById("responseMessage").innerText = data.message;
                }
            })
            .catch(error => {
                // Handle error
                console.error("Error:", error);
                document.getElementById("responseMessage").style.display = "block";
                document.getElementById("responseMessage").classList.remove("alert-info");
                document.getElementById("responseMessage").classList.add("alert-danger");
                document.getElementById("responseMessage").innerText = "Error: " + error.message;
            });
    });
</script>

</body>

